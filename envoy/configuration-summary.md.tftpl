# F5 XC Tailnet Egress - Configuration Summary

## Deployment Process

### What Happens When You Run ./deploy.sh?

The deployment process consists of two main phases:

#### Phase 1: Infrastructure Provisioning (Terraform)
1. **Initialize Terraform** - Set up working directory and providers
2. **Validate Configuration** - Verify Terraform syntax and configuration
3. **Apply Infrastructure** - Generate all configuration files and manifests
4. **Generate Files**:
   - Kubernetes manifests in `outputs/envoy/k8s/`
   - F5 XC origin pool JSONs in `outputs/envoy/f5xc/`
   - This configuration summary

### What Happens When Press the Red Button?

#### Phase 2: Application Deployment (Kubernetes + F5 XC)
1. **Start kubectl Proxy** - Establish connection to Kubernetes cluster
2. **Create F5 XC Origin Pools** - Deploy origin pools via F5 XC API
3. **Apply Kubernetes Manifests** - Deploy all Kubernetes resources
4. **Verify Deployment** - Check resource status and health

### Objects That Will Be Created

#### F5 XC Objects
%{ for tailnet_index, tailnet in tailnets ~}
%{ for service_index, service in tailnet.services ~}
- **Origin Pool**: `${pool_name_map[service.f5xc_origin_pool]}`
  - Namespace: `${k8s_namespace}`
  - Backend: `tailscale-egress.${k8s_namespace}:${10000 + (tailnet_index * 1000) + service_index}`
  - Protocol: ${upper(service.protocol)}
%{ endfor ~}
%{ endfor ~}

#### Kubernetes Resources
- **Namespace**: `${k8s_namespace}` (if not exists)
- **ServiceAccount**: `tailscale-egress`
- **Role**: `tailscale-egress` (RBAC permissions)
- **RoleBinding**: `tailscale-egress` (bind role to service account)
- **Secrets**: Tailscale authentication keys for each tailnet
- **ConfigMap**: Envoy proxy configuration
- **Service**: `tailscale-egress` (ClusterIP with multiple ports)
- **StatefulSet**: `tailscale-egress` (main application with Envoy + Tailscale containers)

### Manifest Files That Will Be Applied

The following Kubernetes manifests will be applied in order:
1. `00-secrets.yaml` - Tailscale authentication secrets
2. `01-serviceaccount.yaml` - Service account for the application
3. `02-role.yaml` - RBAC role definition
4. `03-rolebinding.yaml` - Role binding to service account
5. `04-service.yaml` - Kubernetes service definition
6. `05-configmap.yaml` - Envoy proxy configuration
7. `06-statefulset.yaml` - Main application deployment

### F5 XC API Operations

The following API calls will be made to F5 XC:
%{ for tailnet_index, tailnet in tailnets ~}
%{ for service_index, service in tailnet.services ~}
- **POST** `/api/config/namespaces/${k8s_namespace}/origin_pools`
  - Body: JSON configuration for `${pool_name_map[service.f5xc_origin_pool]}`
%{ endfor ~}
%{ endfor ~}

### Example Usage

To access a service through the egress service from F5 XC:

```bash
# Example: Access production app service
curl http://tailscale-egress.${k8s_namespace}.svc.cluster.local:10000
```

### Kubectl Commands

```bash
# Check service status
kubectl get service tailscale-egress -n ${k8s_namespace}

# Check pod status
kubectl get pods -l app=tailscale-egress -n ${k8s_namespace}

# Port forward for testing
%{ for tailnet_index, tailnet in tailnets ~}
%{ for service_index, service in tailnet.services ~}
kubectl port-forward svc/tailscale-egress ${10000 + (tailnet_index * 1000) + service_index}:${10000 + (tailnet_index * 1000) + service_index} -n ${k8s_namespace}
%{ endfor ~}
%{ endfor ~}
```

---
*Generated by Terraform on ${timestamp()}*