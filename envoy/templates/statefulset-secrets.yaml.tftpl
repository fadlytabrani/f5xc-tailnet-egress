---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tailscale-egress
  labels:
    app: tailscale-egress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale-egress
  serviceName: tailscale-egress
  template:
    metadata:
      labels:
        app: tailscale-egress
    spec:
      serviceAccountName: tailscale-egress
      containers:
        - name: envoy
          image: envoyproxy/envoy:distroless-dev
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
              readOnly: true
%{ for index, tailnet in tailnets ~}
        - name: tailscale-${tailnet.tailnet_name}
          image: ghcr.io/tailscale/tailscale
          command: ['/bin/sh', '-c']
          args:
            - >-
                export TS_HOSTNAME=$(hostname)-${tailnet.tailnet_name}-$VES_IO_SITENAME;
                /usr/local/bin/containerboot
          volumeMounts:
            - name: var-run-${tailnet.tailnet_name}
              mountPath: /var/run
          env:
            - name: TS_USERSPACE
              value: 'true'
            - name: TS_EXTRA_ARGS
              value: --shields-up --advertise-tags=tag:f5xc-egress
            - name: TS_OUTBOUND_HTTP_PROXY_LISTEN
              value: 'localhost:${10550 + index}'
            - name: TS_KUBE_SECRET
              value: ''
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-auth-${tailnet.tailnet_name}
                  key: TS_AUTHKEY
%{ endfor ~}
      volumes:
        - name: envoy-config
          configMap: 
            name: tailscale-egress-envoy
%{ for tailnet in tailnets ~}
        - name: var-run-${tailnet.tailnet_name}
          emptyDir: {}
%{ endfor ~}
